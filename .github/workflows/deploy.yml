name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      SKIP_TESTS: 'true'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission to gradlew
        run: chmod +x gradlew

      - name: Initialize Gradle Wrapper (if gradlew is missing)
        run: gradle wrapper

      - name: Build with Gradle
        run: |
          ./gradlew :auth:clean :auth:build -x test
          ./gradlew :api-gateway:clean :api-gateway:build -x test
          ./gradlew :discovery-service:clean :discovery-service:build -x test
          ./gradlew :order:clean :order:build -x test
          ./gradlew :payment:clean :payment:build -x test
          ./gradlew :product:clean :product:build -x test

      - name: Build and Push Docker Images
        run: |
          docker-compose -f service-module.yml build
          docker-compose -f database-docker.yml build
          docker-compose -f zookeeper-kafka.yml build
          docker-compose -f front-docker.yml build
          
          docker-compose -f service-module.yml push
          docker-compose -f database-docker.yml push 
          docker-compose -f zookeeper-kafka.yml push
          docker-compose -f front-docker.yml push
          

      - name: Decode SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" | base64 -d > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key_path: ec2_key.pem
          timeout: 21600s
          script: |
            if [ ! -d "msa-project" ]; then
              git clone https://github.com/${{ github.repository }}.git msa-project
            fi
            cd ~/msa-project
            git pull
            
            docker network create msa-network || true
            
            echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
            echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
            echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
            
            docker-compose -f service-module.yml pull
            docker-compose --env-file .env -f database-docker.yml pull
            docker-compose -f zookeeper-kafka.yml pull 
            docker-compose -f front-docker.yml pull 
            
            docker-compose -f service-module.yml up -d
            docker-compose --env-file .env -f database-docker.yml up -d
            docker-compose -f zookeeper-kafka.yml up -d
            docker-compose -f front-docker.yml up -d